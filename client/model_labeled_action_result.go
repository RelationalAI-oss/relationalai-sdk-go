/*
 * RelationalAI SDK
 *
 * This is a Client SDK for RelationalAI
 *
 * API version: 1.1.3
 * Contact: support@relational.ai
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// LabeledActionResult struct for LabeledActionResult
type LabeledActionResult struct {
	Name   string          `json:"name"`
	Result json.RawMessage `json:"result"`
	Type   string          `json:"type"`
}

// NewLabeledActionResult instantiates a new LabeledActionResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLabeledActionResult(name string, result json.RawMessage, type_ string) *LabeledActionResult {
	this := LabeledActionResult{}
	this.Name = name
	this.Result = result
	this.Type = type_
	return &this
}

// NewLabeledActionResultWithDefaults instantiates a new LabeledActionResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLabeledActionResultWithDefaults() *LabeledActionResult {
	this := LabeledActionResult{}
	var name string = ""
	this.Name = name
	var type_ string = "LabeledActionResult"
	this.Type = type_
	return &this
}

// GetName returns the Name field value
func (o *LabeledActionResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LabeledActionResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LabeledActionResult) SetName(v string) {
	o.Name = v
}

// GetResult returns the Result field value
func (o *LabeledActionResult) GetResult() json.RawMessage {
	if o == nil {
		var ret json.RawMessage
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *LabeledActionResult) GetResultOk() (*json.RawMessage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *LabeledActionResult) SetResult(v json.RawMessage) {
	o.Result = v
}

// GetType returns the Type field value
func (o *LabeledActionResult) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *LabeledActionResult) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *LabeledActionResult) SetType(v string) {
	o.Type = v
}

func (o LabeledActionResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["result"] = o.Result
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableLabeledActionResult struct {
	value *LabeledActionResult
	isSet bool
}

func (v NullableLabeledActionResult) Get() *LabeledActionResult {
	return v.value
}

func (v *NullableLabeledActionResult) Set(val *LabeledActionResult) {
	v.value = val
	v.isSet = true
}

func (v NullableLabeledActionResult) IsSet() bool {
	return v.isSet
}

func (v *NullableLabeledActionResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLabeledActionResult(val *LabeledActionResult) *NullableLabeledActionResult {
	return &NullableLabeledActionResult{value: val, isSet: true}
}

func (v NullableLabeledActionResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLabeledActionResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
