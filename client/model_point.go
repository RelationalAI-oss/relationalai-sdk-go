/*
 * RelationalAI SDK
 *
 * This is a Client SDK for RelationalAI
 *
 * API version: 1.1.3
 * Contact: support@relational.ai
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// Point struct for Point
type Point struct {
	Column int32 `json:"column"`
	Row int32 `json:"row"`
	Type string `json:"type"`
}

// NewPoint instantiates a new Point object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoint(column int32, row int32, type_ string, ) *Point {
	this := Point{}
	this.Column = column
	this.Row = row
	this.Type = type_
	return &this
}

// NewPointWithDefaults instantiates a new Point object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPointWithDefaults() *Point {
	this := Point{}
	var column int32 = 0
	this.Column = column
	var row int32 = 0
	this.Row = row
	var type_ string = "Point"
	this.Type = type_
	return &this
}

// GetColumn returns the Column field value
func (o *Point) GetColumn() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Column
}

// GetColumnOk returns a tuple with the Column field value
// and a boolean to check if the value has been set.
func (o *Point) GetColumnOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Column, true
}

// SetColumn sets field value
func (o *Point) SetColumn(v int32) {
	o.Column = v
}

// GetRow returns the Row field value
func (o *Point) GetRow() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Row
}

// GetRowOk returns a tuple with the Row field value
// and a boolean to check if the value has been set.
func (o *Point) GetRowOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Row, true
}

// SetRow sets field value
func (o *Point) SetRow(v int32) {
	o.Row = v
}

// GetType returns the Type field value
func (o *Point) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Point) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Point) SetType(v string) {
	o.Type = v
}

func (o Point) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["column"] = o.Column
	}
	if true {
		toSerialize["row"] = o.Row
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullablePoint struct {
	value *Point
	isSet bool
}

func (v NullablePoint) Get() *Point {
	return v.value
}

func (v *NullablePoint) Set(val *Point) {
	v.value = val
	v.isSet = true
}

func (v NullablePoint) IsSet() bool {
	return v.isSet
}

func (v *NullablePoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoint(val *Point) *NullablePoint {
	return &NullablePoint{value: val, isSet: true}
}

func (v NullablePoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


