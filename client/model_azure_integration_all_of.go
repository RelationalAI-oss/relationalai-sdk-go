/*
 * RelationalAI SDK
 *
 * This is a Client SDK for RelationalAI
 *
 * API version: 1.2.0
 * Contact: support@relational.ai
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AzureIntegrationAllOf struct for AzureIntegrationAllOf
type AzureIntegrationAllOf struct {
	Credentials []PairSymbolString `json:"credentials,omitempty"`
	Name NullableString `json:"name,omitempty"`
	StorageAllowedLocations []string `json:"storage_allowed_locations,omitempty"`
	StorageBlockedLocations []string `json:"storage_blocked_locations,omitempty"`
	TenantId NullableString `json:"tenant_id,omitempty"`
}

// NewAzureIntegrationAllOf instantiates a new AzureIntegrationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureIntegrationAllOf() *AzureIntegrationAllOf {
	this := AzureIntegrationAllOf{}
	return &this
}

// NewAzureIntegrationAllOfWithDefaults instantiates a new AzureIntegrationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureIntegrationAllOfWithDefaults() *AzureIntegrationAllOf {
	this := AzureIntegrationAllOf{}
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureIntegrationAllOf) GetCredentials() []PairSymbolString {
	if o == nil  {
		var ret []PairSymbolString
		return ret
	}
	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureIntegrationAllOf) GetCredentialsOk() (*[]PairSymbolString, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return &o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *AzureIntegrationAllOf) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given []PairSymbolString and assigns it to the Credentials field.
func (o *AzureIntegrationAllOf) SetCredentials(v []PairSymbolString) {
	o.Credentials = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureIntegrationAllOf) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureIntegrationAllOf) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AzureIntegrationAllOf) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AzureIntegrationAllOf) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AzureIntegrationAllOf) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AzureIntegrationAllOf) UnsetName() {
	o.Name.Unset()
}

// GetStorageAllowedLocations returns the StorageAllowedLocations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureIntegrationAllOf) GetStorageAllowedLocations() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.StorageAllowedLocations
}

// GetStorageAllowedLocationsOk returns a tuple with the StorageAllowedLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureIntegrationAllOf) GetStorageAllowedLocationsOk() (*[]string, bool) {
	if o == nil || o.StorageAllowedLocations == nil {
		return nil, false
	}
	return &o.StorageAllowedLocations, true
}

// HasStorageAllowedLocations returns a boolean if a field has been set.
func (o *AzureIntegrationAllOf) HasStorageAllowedLocations() bool {
	if o != nil && o.StorageAllowedLocations != nil {
		return true
	}

	return false
}

// SetStorageAllowedLocations gets a reference to the given []string and assigns it to the StorageAllowedLocations field.
func (o *AzureIntegrationAllOf) SetStorageAllowedLocations(v []string) {
	o.StorageAllowedLocations = v
}

// GetStorageBlockedLocations returns the StorageBlockedLocations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureIntegrationAllOf) GetStorageBlockedLocations() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.StorageBlockedLocations
}

// GetStorageBlockedLocationsOk returns a tuple with the StorageBlockedLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureIntegrationAllOf) GetStorageBlockedLocationsOk() (*[]string, bool) {
	if o == nil || o.StorageBlockedLocations == nil {
		return nil, false
	}
	return &o.StorageBlockedLocations, true
}

// HasStorageBlockedLocations returns a boolean if a field has been set.
func (o *AzureIntegrationAllOf) HasStorageBlockedLocations() bool {
	if o != nil && o.StorageBlockedLocations != nil {
		return true
	}

	return false
}

// SetStorageBlockedLocations gets a reference to the given []string and assigns it to the StorageBlockedLocations field.
func (o *AzureIntegrationAllOf) SetStorageBlockedLocations(v []string) {
	o.StorageBlockedLocations = v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureIntegrationAllOf) GetTenantId() string {
	if o == nil || o.TenantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureIntegrationAllOf) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *AzureIntegrationAllOf) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *AzureIntegrationAllOf) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *AzureIntegrationAllOf) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *AzureIntegrationAllOf) UnsetTenantId() {
	o.TenantId.Unset()
}

func (o AzureIntegrationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.StorageAllowedLocations != nil {
		toSerialize["storage_allowed_locations"] = o.StorageAllowedLocations
	}
	if o.StorageBlockedLocations != nil {
		toSerialize["storage_blocked_locations"] = o.StorageBlockedLocations
	}
	if o.TenantId.IsSet() {
		toSerialize["tenant_id"] = o.TenantId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAzureIntegrationAllOf struct {
	value *AzureIntegrationAllOf
	isSet bool
}

func (v NullableAzureIntegrationAllOf) Get() *AzureIntegrationAllOf {
	return v.value
}

func (v *NullableAzureIntegrationAllOf) Set(val *AzureIntegrationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureIntegrationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureIntegrationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureIntegrationAllOf(val *AzureIntegrationAllOf) *NullableAzureIntegrationAllOf {
	return &NullableAzureIntegrationAllOf{value: val, isSet: true}
}

func (v NullableAzureIntegrationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureIntegrationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


