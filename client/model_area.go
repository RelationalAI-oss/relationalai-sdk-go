/*
 * RelationalAI SDK
 *
 * This is a Client SDK for RelationalAI
 *
 * API version: 1.2.0
 * Contact: support@relational.ai
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// Area struct for Area
type Area struct {
	EndPoint Point `json:"end_point"`
	StartPoint Point `json:"start_point"`
	Type string `json:"type"`
}

// NewArea instantiates a new Area object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArea(endPoint Point, startPoint Point, type_ string, ) *Area {
	this := Area{}
	this.EndPoint = endPoint
	this.StartPoint = startPoint
	this.Type = type_
	return &this
}

// NewAreaWithDefaults instantiates a new Area object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAreaWithDefaults() *Area {
	this := Area{}
	var type_ string = "Area"
	this.Type = type_
	return &this
}

// GetEndPoint returns the EndPoint field value
func (o *Area) GetEndPoint() Point {
	if o == nil  {
		var ret Point
		return ret
	}

	return o.EndPoint
}

// GetEndPointOk returns a tuple with the EndPoint field value
// and a boolean to check if the value has been set.
func (o *Area) GetEndPointOk() (*Point, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndPoint, true
}

// SetEndPoint sets field value
func (o *Area) SetEndPoint(v Point) {
	o.EndPoint = v
}

// GetStartPoint returns the StartPoint field value
func (o *Area) GetStartPoint() Point {
	if o == nil  {
		var ret Point
		return ret
	}

	return o.StartPoint
}

// GetStartPointOk returns a tuple with the StartPoint field value
// and a boolean to check if the value has been set.
func (o *Area) GetStartPointOk() (*Point, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StartPoint, true
}

// SetStartPoint sets field value
func (o *Area) SetStartPoint(v Point) {
	o.StartPoint = v
}

// GetType returns the Type field value
func (o *Area) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Area) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Area) SetType(v string) {
	o.Type = v
}

func (o Area) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["end_point"] = o.EndPoint
	}
	if true {
		toSerialize["start_point"] = o.StartPoint
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableArea struct {
	value *Area
	isSet bool
}

func (v NullableArea) Get() *Area {
	return v.value
}

func (v *NullableArea) Set(val *Area) {
	v.value = val
	v.isSet = true
}

func (v NullableArea) IsSet() bool {
	return v.isSet
}

func (v *NullableArea) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArea(val *Area) *NullableArea {
	return &NullableArea{value: val, isSet: true}
}

func (v NullableArea) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArea) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


