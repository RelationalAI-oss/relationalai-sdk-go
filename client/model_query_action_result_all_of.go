/*
 * Delve Client SDK
 *
 * This is a Client SDK for Delve API
 *
 * API version: 1.1.3
 * Contact: support@relational.ai
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// QueryActionResultAllOf struct for QueryActionResultAllOf
type QueryActionResultAllOf struct {
	Output []Relation `json:"output,omitempty"`
}

// NewQueryActionResultAllOf instantiates a new QueryActionResultAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryActionResultAllOf() *QueryActionResultAllOf {
	this := QueryActionResultAllOf{}
	return &this
}

// NewQueryActionResultAllOfWithDefaults instantiates a new QueryActionResultAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryActionResultAllOfWithDefaults() *QueryActionResultAllOf {
	this := QueryActionResultAllOf{}
	return &this
}

// GetOutput returns the Output field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueryActionResultAllOf) GetOutput() []Relation {
	if o == nil  {
		var ret []Relation
		return ret
	}
	return o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueryActionResultAllOf) GetOutputOk() (*[]Relation, bool) {
	if o == nil || o.Output == nil {
		return nil, false
	}
	return &o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *QueryActionResultAllOf) HasOutput() bool {
	if o != nil && o.Output != nil {
		return true
	}

	return false
}

// SetOutput gets a reference to the given []Relation and assigns it to the Output field.
func (o *QueryActionResultAllOf) SetOutput(v []Relation) {
	o.Output = v
}

func (o QueryActionResultAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Output != nil {
		toSerialize["output"] = o.Output
	}
	return json.Marshal(toSerialize)
}

type NullableQueryActionResultAllOf struct {
	value *QueryActionResultAllOf
	isSet bool
}

func (v NullableQueryActionResultAllOf) Get() *QueryActionResultAllOf {
	return v.value
}

func (v *NullableQueryActionResultAllOf) Set(val *QueryActionResultAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryActionResultAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryActionResultAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryActionResultAllOf(val *QueryActionResultAllOf) *NullableQueryActionResultAllOf {
	return &NullableQueryActionResultAllOf{value: val, isSet: true}
}

func (v NullableQueryActionResultAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryActionResultAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


